{"version":3,"file":"static/js/375.4b2502f6.chunk.js","mappings":"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","sources":["pages/data.tsx","pages/Home.tsx"],"sourcesContent":["import axios, { AxiosResponse, AxiosRequestConfig } from 'axios';\n\nconst client = axios.create({\n  baseURL: 'http://192.168.1.133:9080/',\n});\nconst defaultErrorRes : JsonResponseUserToken = {\n    'error':'Y',\n    errorDetails: ['Something went wrong!']\n  };\nconst config: AxiosRequestConfig = {\n    headers: {\n      'Accept': 'application/json',\n    },\n};\nexport type MemberInfo = {\n    member_id : number, \n    member_name : string,  \n    member_status: number,\n    member_status_desc: string ,\n    member_email: string,\n    token_count: number\n}\nexport type MemberTokenInfo = {\n    iss_id: number,\n    member_id : number, \n    token_text: number,\n    token_status: string ,\n    token_status_desc: string ,\n    token_redeem_date: string,    \n}\ntype JsonResponseBase = {\n    error?: string,\n    errorDetails?: string[],\n    action?: string    \n}\nexport type JsonResponseUser  = JsonResponseBase & {    \n    result? : MemberInfo[]\n}\nexport type JsonResponseUserToken  = JsonResponseBase & {    \n    result? : MemberTokenInfo[]\n}\nexport const getUserData  = async () : Promise<JsonResponseUser> => {\n    try {\n        const searchResponse: AxiosResponse<JsonResponseUser> = await client.get(`/api/members_to_issues.php`, config);\n        console.log(searchResponse.data);\n        //if(searchResponse.data && searchResponse.data[\"error\"] !== \"Y\" ){\n            // success\n            //const result : MemberInfo[] = searchResponse.result;\n\n            return searchResponse.data; \n        //}\n        //const foundUsers: MemberInfo[] = searchResponse.data.js;\n    \n        // const username: string = foundUsers[0].login;\n        // const userResponse: AxiosResponse = await client.get(`/users/${username}`, config);\n        // const user: githubUser = userResponse.data;\n        // const followersCount = user.followers;\n    \n        //console.log(`The most followed user on GitHub is \"${username}\" with ${followersCount} followers.`)\n      } catch(err) {\n        console.log(err);\n      } \n      const r : JsonResponseUser = {\n        'error':'Y'\n      };\n      return r;\n}\n\nexport const getUserTokenData  = async (member_id : number) : Promise<JsonResponseUserToken> => {\n    try {\n        const queryString: string = `action=GET_TOKENS&member_id=${member_id}`;\n        const searchResponse: AxiosResponse<JsonResponseUserToken> = await client.get(`/api/members_to_issues.php?${queryString}`, config);\n        console.log(searchResponse.data);\n        //if(searchResponse.data && searchResponse.data[\"error\"] !== \"Y\" ){\n            // success\n            //const result : MemberInfo[] = searchResponse.result;\n\n            return searchResponse.data; \n        //}\n        //const foundUsers: MemberInfo[] = searchResponse.data.js;\n    \n        // const username: string = foundUsers[0].login;\n        // const userResponse: AxiosResponse = await client.get(`/users/${username}`, config);\n        // const user: githubUser = userResponse.data;\n        // const followersCount = user.followers;\n    \n        //console.log(`The most followed user on GitHub is \"${username}\" with ${followersCount} followers.`)\n      } catch(err) {\n        console.log(err);\n      } \n     \n      return defaultErrorRes;\n}\n\nexport const deleteUserToken  = async (member_id : number, iss_id : number) : Promise<JsonResponseUserToken> => {\n    try {        \n        const data = {'member_id': member_id,'iss_id' : iss_id , 'action' : 'DELETE_TOKEN'};\n        const searchResponse: AxiosResponse<JsonResponseUserToken> = await client.post(`/api/members_to_issues.php`,data, config);\n        console.log(searchResponse.data);\n        //if(searchResponse.data && searchResponse.data[\"error\"] !== \"Y\" ){\n            // success\n            //const result : MemberInfo[] = searchResponse.result;\n\n        return searchResponse.data; \n        //}\n        //const foundUsers: MemberInfo[] = searchResponse.data.js;\n    \n        // const username: string = foundUsers[0].login;\n        // const userResponse: AxiosResponse = await client.get(`/users/${username}`, config);\n        // const user: githubUser = userResponse.data;\n        // const followersCount = user.followers;\n    \n        //console.log(`The most followed user on GitHub is \"${username}\" with ${followersCount} followers.`)\n      } catch(err) {\n        console.log(err);\n      } \n      \n      return defaultErrorRes;\n}\n\nexport const undoUserToken  = async (member_id : number, iss_id : number) : Promise<JsonResponseUserToken> => {\n    try {        \n        const data = {'member_id': member_id,'iss_id' : iss_id , 'action' : 'UNDO_TOKEN'};\n        const searchResponse: AxiosResponse<JsonResponseUserToken> = await client.post(`/api/members_to_issues.php`,data, config);\n        console.log(searchResponse.data);\n        //if(searchResponse.data && searchResponse.data[\"error\"] !== \"Y\" ){\n            // success\n            //const result : MemberInfo[] = searchResponse.result;\n\n        return searchResponse.data; \n        //}\n        //const foundUsers: MemberInfo[] = searchResponse.data.js;\n    \n        // const username: string = foundUsers[0].login;\n        // const userResponse: AxiosResponse = await client.get(`/users/${username}`, config);\n        // const user: githubUser = userResponse.data;\n        // const followersCount = user.followers;\n    \n        //console.log(`The most followed user on GitHub is \"${username}\" with ${followersCount} followers.`)\n      } catch(err) {\n        console.log(err);\n      } \n     \n      return defaultErrorRes;\n}\n\n\nexport const issueSingleUserToken  = async (member_id : number) : Promise<JsonResponseUserToken> => {\n    try {        \n        const data = {'member_id': member_id, 'action' : 'ISSUE_SINGLE_TOKEN'};\n        const searchResponse: AxiosResponse<JsonResponseUserToken> = await client.post(`/api/members_to_issues.php`,data, config);\n        console.log(searchResponse.data);\n        //if(searchResponse.data && searchResponse.data[\"error\"] !== \"Y\" ){\n            // success\n            //const result : MemberInfo[] = searchResponse.result;\n\n        return searchResponse.data; \n        //}\n        //const foundUsers: MemberInfo[] = searchResponse.data.js;\n    \n        // const username: string = foundUsers[0].login;\n        // const userResponse: AxiosResponse = await client.get(`/users/${username}`, config);\n        // const user: githubUser = userResponse.data;\n        // const followersCount = user.followers;\n    \n        //console.log(`The most followed user on GitHub is \"${username}\" with ${followersCount} followers.`)\n      } catch(err) {\n        console.log(err);\n      } \n      \n      return defaultErrorRes;\n}","import React from 'react'\nimport ReactDOM from 'react-dom/client'\n\nimport './home.css'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Alert, Table as BTable, Card, CardBody, Table } from 'react-bootstrap';\n\n\nimport {\n   Column,\n   ColumnDef,\n   ColumnFiltersState,\n   RowData,\n   flexRender,\n   getCoreRowModel,\n   getFilteredRowModel,\n   getPaginationRowModel,\n   getSortedRowModel,\n   useReactTable,\n   ExpandedState,\n   getExpandedRowModel,\n   Row\n } from '@tanstack/react-table'\n \n //import { makeData, Person } from './makeData'\n import { MemberInfo,getUserData,getUserTokenData,MemberTokenInfo,JsonResponseUser,JsonResponseUserToken, issueSingleUserToken, undoUserToken, deleteUserToken } from './data';\nimport { Button } from 'react-bootstrap';\n\n \n declare module '@tanstack/react-table' {\n   //allows us to define custom properties for our columns\n   interface ColumnMeta<TData extends RowData, TValue> {\n     filterVariant?: 'text' | 'range' | 'select'\n   }\n }\n\n\n\n const TokenComponent = ({ row }: { row: Row<MemberInfo> }) => {\n  const [data, setData] = React.useState<MemberTokenInfo[]>([]);\n  const [message, setMessage] = React.useState<String>('');\n  const [errmsg, setErrmsg] = React.useState<String>('');\n\n  React.useEffect(()=>{\n    refreshData();\n  },[]);\n  \n  const refreshData = () => {\n    getUserTokenData(row.original.member_id).then((data : JsonResponseUserToken)=>{\n      //console.log(\"data\",data);\n      if(data.result){\n        setData(data.result);\n      }\n      \n    });\n  }\n  const issueMoreToken = (member_id : number) => {\n    issueSingleUserToken(member_id).then((data : JsonResponseUserToken) => {\n      if(data.error==='Y'){        \n        \n      }else{\n        setMessage(\"Succesfully Issued.\");\n        refreshData();\n      }\n    });\n  }\n  const sendEmail = (member_id : number) => {\n    // issueSingleUserToken(member_id).then((data : JsonResponseUserToken) => {\n    //   if(data.error==='Y'){        \n        \n    //   }else{\n    //     setMessage(\"Succesfully Issued.\");\n    //     refreshData();\n    //   }\n    // });\n  }\n  const openPDF = (member_id : number,member_email: string) => {\n    // issueSingleUserToken(member_id).then((data : JsonResponseUserToken) => {\n    //   if(data.error==='Y'){        \n        \n    //   }else{\n    //     setMessage(\"Succesfully Issued.\");\n    //     refreshData();\n    //   }\n    // });\n    window.open(\"https://bcaa.subhas.dev/custom_pages/members_details.php?email=\"+member_email,\"_balnk\");\n  }\n  const deleteToken = (member_id : number,iss_id: number) => {\n    deleteUserToken(member_id,iss_id).then((data : JsonResponseUserToken) => {\n      if(data.error==='Y'){        \n        \n      }else{\n        setMessage(\"Succesfully Deleted.\");\n        refreshData();\n      }\n    });\n  }\n  const undoToken = (member_id : number,iss_id: number) => {\n    undoUserToken(member_id,iss_id).then((data : JsonResponseUserToken) => {\n      if(data.error==='Y'){        \n        \n      }else{\n        setMessage(\"Succesfully Undo.\");\n        refreshData();\n      }\n    });\n  }\n  const columns = React.useMemo<ColumnDef<MemberTokenInfo, any>[]>(\n    () => [\n      {\n        accessorKey: 'iss_id',      \n        cell: info => info.getValue(),       \n        header: () => <span>ID#</span>,\n      },\n      {        \n        accessorKey: 'token_text',\n        cell: info => info.getValue(),\n        header: () => <span>Token</span>,\n      }, \n      {\n        accessorKey: 'token_status',\n        header: () => <span>Token Status #</span>     \n      },\n      {\n        accessorKey: 'token_status_desc',\n        header: 'Status Desc',        \n      },  \n      {\n        accessorKey: 'token_redeem_date',\n        header: 'Redeem Date',        \n      },     \n    ],\n    []\n  );\n  const table = useReactTable({data,\n    columns,\n    getCoreRowModel: getCoreRowModel()});\n\n   return (\n    <div className=\"container\">   \n      {message && <Alert variant='success'>{message}</Alert> } \n      {errmsg && <Alert variant='warning'>{errmsg}</Alert> } \n      <div></div>\n      <BTable striped bordered hover responsive size=\"sm\">\n       <thead>\n         {table.getHeaderGroups().map(headerGroup => (\n           <tr key={headerGroup.id}>\n             {headerGroup.headers.map(header => {\n               return (\n                 <th key={header.id} colSpan={header.colSpan}>\n                   {header.isPlaceholder ? null : (\n                     <>\n                       <div>\n                         {flexRender(\n                           header.column.columnDef.header,\n                           header.getContext()\n                         )}                         \n                       </div>                       \n                     </>\n                   )}\n                 </th>\n               )\n             })}\n           </tr>\n         ))}\n       </thead>\n       <tbody>\n         {table.getRowModel().rows.map(row => {\n           return (\n            <React.Fragment key={row.id}>\n             <tr>\n              <td>\n              {row.original.token_status === 'R' &&  <Button variant=\"danger\" onClick={()=> undoToken(row.original.member_id,row.original.iss_id) }>Undo Redeem</Button>} {' '} \n              <Button variant=\"warning\" onClick={()=> deleteToken(row.original.member_id,row.original.iss_id) }>Remove</Button></td>\n               {row.getVisibleCells().map(cell => {\n                 return (\n                   <td key={cell.id}>\n                     {flexRender(\n                       cell.column.columnDef.cell,\n                       cell.getContext()\n                     )}\n                   </td>\n                 )\n               })}               \n             </tr>            \n             </React.Fragment>\n           )\n         })}\n       </tbody>\n     </BTable>\n      <div>\n        <Button variant=\"primary\" onClick={refreshData}>Refresh</Button>{' '}\n        <Button variant=\"primary\" onClick={()=>issueMoreToken(row.original.member_id)}>Issue 1 Token</Button>{' '}\n        <Button variant=\"info\" onClick={()=>sendEmail(row.original.member_id)}>Send Email to User</Button>{' '}\n        <Button variant=\"info\" onClick={()=>openPDF(row.original.member_id,row.original.member_email)}>Open As PDF</Button>{' '}\n      </div>\n      { /*\n        data.map( t =>{\n          return <Card>\n            <CardBody>\n            <code>{JSON.stringify(t, null, 2)}</code>       \n            </CardBody>\n          </Card>\n        }) */\n      }     \n     </div>\n   )\n }\n\n\n\nconst Home = () => {\n\n   const rerender = React.useReducer(() => ({}), {})[1]\n\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>(\n    []\n  )\n\n  const columns = React.useMemo<ColumnDef<MemberInfo, any>[]>(\n    () => [\n      {\n        accessorKey: 'member_name',      \n       // cell: info => info.getValue(),\n       cell: ({ row, getValue }) => (\n         <div\n           style={{\n             // Since rows are flattened by default,\n             // we can use the row.depth property\n             // and paddingLeft to visually indicate the depth\n             // of the row\n             paddingLeft: `${row.depth * 2}rem`,\n           }}\n         >\n           <div>            \n             {row.getCanExpand() ? (\n               <button\n                 {...{\n                   onClick: row.getToggleExpandedHandler(),\n                   style: { cursor: 'pointer' },\n                 }}\n               >\n                 {row.getIsExpanded() ? '👇' : '👉'}\n               </button>\n             ) : (\n               '🔵'\n             )}{' '}\n             {getValue<boolean>()}\n           </div>\n         </div>\n       ),\n       header: () => <span>Name</span>,\n      },\n      {\n        accessorFn: row => row.member_email,\n        id: 'member_email',\n        cell: info => info.getValue(),\n        header: () => <span>Email</span>,\n      },      \n      \n      {\n        accessorKey: 'token_count',\n        header: () => <span>Token Count #</span>     \n      },\n      {\n        accessorKey: 'member_status_desc',\n        header: 'Status',\n        meta: {\n          filterVariant: 'select',\n        },\n      },     \n    ],\n    []\n  )\n  const [data, setData] = React.useState<MemberInfo[]>([]);\n  React.useEffect(()=>{\n    getUserData().then((data : JsonResponseUser)=>{\n      //console.log(\"data\",data);\n      if(data.result){\n        setData(data.result);\n      }            \n    });\n  },[]);\n\n  //const [data, setData] = React.useState<Person[]>(() => makeData(100,5,4))\n  const refreshData = () => setData(_old => []); //stress test\n  \n  //const [expanded, setExpanded] = React.useState<ExpandedState>({})\n\n  const table = useReactTable({\n    data,\n    columns,\n    filterFns: {},\n    state: {\n      columnFilters,\n      //expanded\n    },\n    getRowCanExpand : ()=> { return true},\n    //onExpandedChange: setExpanded,\n    //getSubRows: row => row.subRows,\n    onColumnFiltersChange: setColumnFilters,\n    getCoreRowModel: getCoreRowModel(),\n    getFilteredRowModel: getFilteredRowModel(), //client side filtering\n    getSortedRowModel: getSortedRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    //getExpandedRowModel: getExpandedRowModel(),\n    debugTable: true,\n    debugHeaders: true,\n    debugColumns: false,\n  })\n\n  return (\n   <div className=\"p-2\">\n     <BTable striped bordered hover responsive size=\"sm\">\n       <thead>\n         {table.getHeaderGroups().map(headerGroup => (\n           <tr key={headerGroup.id}>\n             {headerGroup.headers.map(header => {\n               return (\n                 <th key={header.id} colSpan={header.colSpan}>\n                   {header.isPlaceholder ? null : (\n                     <>\n                       <div\n                         {...{\n                           className: header.column.getCanSort()\n                             ? 'cursor-pointer select-none'\n                             : '',\n                           onClick: header.column.getToggleSortingHandler(),\n                         }}\n                       >\n                         {flexRender(\n                           header.column.columnDef.header,\n                           header.getContext()\n                         )}\n                         {{\n                           asc: ' 🔼',\n                           desc: ' 🔽',\n                         }[header.column.getIsSorted() as string] ?? null}\n                       </div>\n                       {header.column.getCanFilter() ? (\n                         <div>\n                           <Filter column={header.column} />\n                         </div>\n                       ) : null}\n                     </>\n                   )}\n                 </th>\n               )\n             })}\n           </tr>\n         ))}\n       </thead>\n       <tbody>\n         {table.getRowModel().rows.map(row => {\n           return (\n            <React.Fragment key={row.id}>\n             <tr>\n               {row.getVisibleCells().map(cell => {\n                 return (\n                   <td key={cell.id}>\n                     {flexRender(\n                       cell.column.columnDef.cell,\n                       cell.getContext()\n                     )}\n                   </td>\n                 )\n               })}\n             </tr>\n             {row.getIsExpanded() && (\n               <tr>\n                 {/* 2nd row is a custom 1 cell row */}\n                 <td colSpan={row.getVisibleCells().length}>\n                   <TokenComponent row={row}/>\n                 </td>\n               </tr>\n             )}\n             </React.Fragment>\n           )\n         })}\n       </tbody>\n     </BTable>\n     <div className=\"h-2\" />\n     <div className=\"flex items-center gap-2\">\n       <button\n         className=\"border rounded p-1\"\n         onClick={() => table.setPageIndex(0)}\n         disabled={!table.getCanPreviousPage()}\n       >\n         {'<<'}\n       </button>\n       <button\n         className=\"border rounded p-1\"\n         onClick={() => table.previousPage()}\n         disabled={!table.getCanPreviousPage()}\n       >\n         {'<'}\n       </button>\n       <button\n         className=\"border rounded p-1\"\n         onClick={() => table.nextPage()}\n         disabled={!table.getCanNextPage()}\n       >\n         {'>'}\n       </button>\n       <button\n         className=\"border rounded p-1\"\n         onClick={() => table.setPageIndex(table.getPageCount() - 1)}\n         disabled={!table.getCanNextPage()}\n       >\n         {'>>'}\n       </button>\n       <span className=\"flex items-center gap-1\">\n         <div>Page</div>\n         <strong>\n           {table.getState().pagination.pageIndex + 1} of{' '}\n           {table.getPageCount()}\n         </strong>\n       </span>\n       <span className=\"flex items-center gap-1\">\n         | Go to page:\n         <input\n           type=\"number\"\n           defaultValue={table.getState().pagination.pageIndex + 1}\n           onChange={e => {\n             const page = e.target.value ? Number(e.target.value) - 1 : 0\n             table.setPageIndex(page)\n           }}\n           className=\"border p-1 rounded w-16\"\n         />\n       </span>\n       <select\n         value={table.getState().pagination.pageSize}\n         onChange={e => {\n           table.setPageSize(Number(e.target.value))\n         }}\n       >\n         {[10, 20, 30, 40, 50,100,200].map(pageSize => (\n           <option key={pageSize} value={pageSize}>\n             Show {pageSize}\n           </option>\n         ))}\n       </select>\n     </div>\n     <div>{table.getPrePaginationRowModel().rows.length} Rows</div>\n     <div>\n       <button onClick={() => rerender()}>Force Rerender</button>\n     </div>\n     <div>\n       <button onClick={() => refreshData()}>Refresh Data</button>\n     </div>\n     <pre>\n       {JSON.stringify(\n         { columnFilters: table.getState().columnFilters },\n         null,\n         2\n       )}\n     </pre>\n   </div>\n );\n   };\n\n   function Filter({ column }: { column: Column<any, unknown> }) {\n      const columnFilterValue = column.getFilterValue()\n      const { filterVariant } = column.columnDef.meta ?? {}\n    \n      return filterVariant === 'range' ? (\n        <div>\n          <div className=\"flex space-x-2\">\n            {/* See faceted column filters example for min max values functionality */}\n            <DebouncedInput\n              type=\"number\"\n              value={(columnFilterValue as [number, number])?.[0] ?? ''}\n              onChange={value =>\n                column.setFilterValue((old: [number, number]) => [value, old?.[1]])\n              }\n              placeholder={`Min`}\n              className=\"w-24 border shadow rounded\"\n            />\n            <DebouncedInput\n              type=\"number\"\n              value={(columnFilterValue as [number, number])?.[1] ?? ''}\n              onChange={value =>\n                column.setFilterValue((old: [number, number]) => [old?.[0], value])\n              }\n              placeholder={`Max`}\n              className=\"w-24 border shadow rounded\"\n            />\n          </div>\n          <div className=\"h-1\" />\n        </div>\n      ) : filterVariant === 'select' ? (\n        <select\n          onChange={e => column.setFilterValue(e.target.value)}\n          value={columnFilterValue?.toString()}\n        >\n          {/* See faceted column filters example for dynamic select options */}\n          <option value=\"\">All</option>\n          <option value=\"1\">Active Only</option>          \n        </select>\n      ) : (\n        <DebouncedInput\n          className=\"w-36 border shadow rounded\"\n          onChange={value => column.setFilterValue(value)}\n          placeholder={`Search...`}\n          type=\"text\"\n          value={(columnFilterValue ?? '') as string}\n        />\n        // See faceted column filters example for datalist search suggestions\n      )\n    }\n    \n    // A typical debounced input react component\n    function DebouncedInput({\n      value: initialValue,\n      onChange,\n      debounce = 500,\n      ...props\n    }: {\n      value: string | number\n      onChange: (value: string | number) => void\n      debounce?: number\n    } & Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'>) {\n      const [value, setValue] = React.useState(initialValue)\n    \n      React.useEffect(() => {\n        setValue(initialValue)\n      }, [initialValue])\n    \n      React.useEffect(() => {\n        const timeout = setTimeout(() => {\n          onChange(value)\n        }, debounce)\n    \n        return () => clearTimeout(timeout)\n      }, [value])\n    \n      return (\n        <input {...props} value={value} onChange={e => setValue(e.target.value)} />\n      )\n    }\n    \n   \n   export default Home;"],"names":["client","axios","baseURL","defaultErrorRes","errorDetails","config","headers","TokenComponent","_ref","row","data","setData","React","message","setMessage","errmsg","setErrmsg","refreshData","async","queryString","concat","member_id","searchResponse","get","console","log","err","getUserTokenData","original","then","result","issueMoreToken","post","issueSingleUserToken","error","deleteToken","iss_id","deleteUserToken","undoToken","undoUserToken","columns","accessorKey","cell","info","getValue","header","_jsx","children","table","useReactTable","getCoreRowModel","_jsxs","className","Alert","variant","BTable","striped","bordered","hover","responsive","size","getHeaderGroups","map","headerGroup","colSpan","isPlaceholder","_Fragment","flexRender","column","columnDef","getContext","id","getRowModel","rows","token_status","Button","onClick","getVisibleCells","openPDF","member_email","window","open","Filter","_ref3","_column$columnDef$met","_","_2","columnFilterValue","getFilterValue","filterVariant","meta","DebouncedInput","type","value","onChange","setFilterValue","old","placeholder","e","target","toString","_ref4","initialValue","debounce","props","setValue","timeout","setTimeout","clearTimeout","Home","rerender","columnFilters","setColumnFilters","_ref2","style","paddingLeft","depth","getCanExpand","getToggleExpandedHandler","cursor","getIsExpanded","accessorFn","getUserData","filterFns","state","getRowCanExpand","onColumnFiltersChange","getFilteredRowModel","getSortedRowModel","getPaginationRowModel","debugTable","debugHeaders","debugColumns","_asc$desc","getCanSort","getToggleSortingHandler","asc","desc","getIsSorted","getCanFilter","length","setPageIndex","disabled","getCanPreviousPage","previousPage","nextPage","getCanNextPage","getPageCount","getState","pagination","pageIndex","defaultValue","page","Number","pageSize","setPageSize","getPrePaginationRowModel","_old","JSON","stringify"],"sourceRoot":""}